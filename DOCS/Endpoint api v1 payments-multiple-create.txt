Endpoint: /api/v1/payments/multiple/create
Ruta:

Route::post('/payments/multiple/create', [PaymentsController::class, 'addMultiplePayment']);

Descripción:

Este endpoint permite la creación de pagos, incluyendo la opción de manejar múltiples métodos de pago.

Este endpoint facilita la creación de pagos en el sistema, permitiendo el uso de varios métodos de pago en una sola transacción. Esto es útil para situaciones donde el cliente desea dividir el pago entre diferentes métodos, como efectivo y tarjeta de débito.

 Es importante tener en cuenta que este endpoint no procesa gestores de pago para tarjetas de crédito y ACH . Por lo tanto, estos métodos de pago deben gestionarse por separado a través de otros endpoints o procesos específicos.

Parámetros de Entrada:

 

•  amount: Valor de tipo biginteger. Indica el monto por el cual se realizará el pago. Obligatorio. El valor por defecto es 0. Para este campo solo se aceptan números enteros. Los dos últimos dígitos representan los decimales.

•  Ejemplo: 99.99 se debe enviar 9999.

•  Ejemplo: 10.13 se debe enviar 1013.

•  invoice_id: ID que identifica la factura. Obligatorio.

•  is_multiple: Valores true y false. Para POS, enviar true.

•  notes: Valor por defecto null. Campo opcional para notas adicionales.

•  paymentNumAttribute: Campo en el cual se envía el número del pago sin el prefijo. Obligatorio.

•  paymentPrefix: Campo en el cual se envía el prefijo del pago. Obligatorio.

•  payment_date: Campo de tipo fecha en formato Y-m-d. Es obligatorio. Indica la fecha de creación del pago.

•  Ejemplo: El formato 2024-11-08 corresponde a Y-m-d, donde:

•  Y: Año completo (2024).

•  m: Mes con dos dígitos (11).

•  d: Día con dos dígitos (08).

•  payment_methods: Array que recibe los registros de los métodos de pago usados en el pago, incluyendo los montos por cada uno, denominaciones de dinero usadas y dinero devuelto si aplica.

Cada registro dentro de payment_methods tiene los siguientes campos:
•  amount: Valor de tipo biginteger. Indica el monto usado con el método de pago específico. Obligatorio. El valor por defecto es 0. Para este campo solo se aceptan números enteros. Los dos últimos dígitos representan los decimales.

•  Ejemplo: 99.99 se debe enviar 9999.

•  Ejemplo: 10.13 se debe enviar 1013.

•  id: ID del método de pago usado.

•  name: Nombre del método de pago.

•  received: Valor de tipo biginteger. En caso de que el método de pago acepte efectivo, indica cuánto fue ingresado.

•  returned: Valor de tipo biginteger. En caso de que el método de pago acepte efectivo, indica cuánto fue devuelto en efectivo al cliente.

•  payment_number: Número del pago.

•  status: Valor del estado de la transacción. Enviar Approved por defecto.

•  user_id: ID del cliente asociado a la factura y pago.

Payload:
amount: 2613695
invoice_id: 60588
is_multiple: true
notes: "<p>nota </p>"
paymentNumAttribute: "939832"
paymentPrefix: "PAY"
payment_date: "2024-11-01"
payment_methods: [{id: 18, name: "Super Payment", amount: 5000, received: 0,…},…]
0: {id: 18, name: "Super Payment", amount: 5000, received: 0,…}
  amount: 5000
  id: 18
  id_raw: "50577920-3b48-32f9-e811-9c9099250808"
  name: "Super Payment"
  received: 0
  returned: 0
  valid: true
1: {id: 19, name: "Ach Test", amount: 60000, received: 0, returned: 0, valid: true}
  amount: 60000
  id: 19
  name: "Ach Test"
  received: 0
  returned: 0
  valid: true
2: {id: 23, name: "Credit card test status (sin gateway)", amount: 2548695, received: 0, returned: 0,…}
  amount: 2548695
  id: 23
  name: "Credit card test status (sin gateway)"
  received: 0
  returned: 0
  valid: true
payment_number: "PAY-939832"
status: {value: "Approved", text: "Approved"}
    text: "Approved"
    value: "Approved"
user_id: 23

Ejemplo de Solicitud:

POST /api/v1/payments/multiple/create
Host: yourapi.com
Authorization: Bearer <token>

Respuesta:
{
    "payment": {
        "payment_date": "2024-11-01T16:52:10.000000Z",
        "user_id": 23,
        "amount": 2613695,
        "payment_number": "PAY-939832",
        "invoice_id": 60588,
        "notes": "<p>nota <\/p>",
        "company_id": "1",
        "creator_id": 1,
        "payment_method_id": 21,
        "unique_hash": "6725073a4b8074.54572677",
        "updated_at": "2024-11-01T16:52:10.000000Z",
        "created_at": "2024-11-01T16:52:10.000000Z",
        "id": 1273874,
        "formattedCreatedAt": "2024\/11\/01",
        "formattedPaymentDate": "2024\/11\/01",
        "paymentPdfUrl": "https:\/\/cbdev.corebill.co\/payments\/pdf\/6725073a4b8074.54572677",
        "is_payment_multiple": 1,
        "payment_method": {
            "id": 21,
            "name": "Multiple",
            "status": "A",
            "only_cash": 0,
            "add_payment_gateway": 0,
            "paypal_button": 0,
            "stripe_button": 0,
            "company_id": 1,
            "account_accepted": "N",
            "created_at": "2023-07-06T23:26:15.000000Z",
            "updated_at": "2023-07-06T23:26:15.000000Z",
            "deleted_at": null,
            "payment_gateways_id": null,
            "settings_id": null,
            "for_customer_use": 0,
            "generate_expense": 0,
            "void_refund": 0,
            "generate_expense_id": null,
            "void_refund_expense_id": null,
            "expense_import": 0,
            "is_multiple": 1,
            "show_notes_table": 0,
            "formattedNameLabel": "Multiple (No Gateway)",
            "registrationdatafees": null,
            "IsPaymentFeeActive": "NO"
        }
    },
    "success": true
}


